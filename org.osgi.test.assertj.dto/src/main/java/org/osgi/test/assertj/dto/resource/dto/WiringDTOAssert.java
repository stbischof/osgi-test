package org.osgi.test.assertj.dto.resource.dto;

import org.osgi.resource.dto.WiringDTO;

/**
 * {@link WiringDTO} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractWiringDTOAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class WiringDTOAssert extends AbstractWiringDTOAssert<WiringDTOAssert, WiringDTO> {

  /**
   * Creates a new <code>{@link WiringDTOAssert}</code> to make assertions on actual WiringDTO.
   * @param actual the WiringDTO we want to make assertions on.
   */
  public WiringDTOAssert(WiringDTO actual) {
    super(actual, WiringDTOAssert.class);
  }

  /**
   * An entry point for WiringDTOAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myWiringDTO)</code> and get specific assertion with code completion.
   * @param actual the WiringDTO we want to make assertions on.
   * @return a new <code>{@link WiringDTOAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static WiringDTOAssert assertThat(WiringDTO actual) {
    return new WiringDTOAssert(actual);
  }
}
