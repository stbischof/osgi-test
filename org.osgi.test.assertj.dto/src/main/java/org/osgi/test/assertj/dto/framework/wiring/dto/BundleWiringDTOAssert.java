package org.osgi.test.assertj.dto.framework.wiring.dto;

import org.osgi.framework.wiring.dto.BundleWiringDTO;

/**
 * {@link BundleWiringDTO} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractBundleWiringDTOAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class BundleWiringDTOAssert extends AbstractBundleWiringDTOAssert<BundleWiringDTOAssert, BundleWiringDTO> {

  /**
   * Creates a new <code>{@link BundleWiringDTOAssert}</code> to make assertions on actual BundleWiringDTO.
   * @param actual the BundleWiringDTO we want to make assertions on.
   */
  public BundleWiringDTOAssert(BundleWiringDTO actual) {
    super(actual, BundleWiringDTOAssert.class);
  }

  /**
   * An entry point for BundleWiringDTOAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myBundleWiringDTO)</code> and get specific assertion with code completion.
   * @param actual the BundleWiringDTO we want to make assertions on.
   * @return a new <code>{@link BundleWiringDTOAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static BundleWiringDTOAssert assertThat(BundleWiringDTO actual) {
    return new BundleWiringDTOAssert(actual);
  }
}
