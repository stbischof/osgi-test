package org.osgi.test.assertj.dto.framework.startlevel.dto;

import org.osgi.framework.startlevel.dto.BundleStartLevelDTO;

/**
 * {@link BundleStartLevelDTO} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractBundleStartLevelDTOAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class BundleStartLevelDTOAssert extends AbstractBundleStartLevelDTOAssert<BundleStartLevelDTOAssert, BundleStartLevelDTO> {

  /**
   * Creates a new <code>{@link BundleStartLevelDTOAssert}</code> to make assertions on actual BundleStartLevelDTO.
   * @param actual the BundleStartLevelDTO we want to make assertions on.
   */
  public BundleStartLevelDTOAssert(BundleStartLevelDTO actual) {
    super(actual, BundleStartLevelDTOAssert.class);
  }

  /**
   * An entry point for BundleStartLevelDTOAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myBundleStartLevelDTO)</code> and get specific assertion with code completion.
   * @param actual the BundleStartLevelDTO we want to make assertions on.
   * @return a new <code>{@link BundleStartLevelDTOAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static BundleStartLevelDTOAssert assertThat(BundleStartLevelDTO actual) {
    return new BundleStartLevelDTOAssert(actual);
  }
}
